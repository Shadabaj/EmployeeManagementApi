// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using DAL.Entities;
using Microsoft.EntityFrameworkCore;

namespace DAL;

public partial class AppDbContext : DbContext
{
    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<Country> Countries { get; set; }

    public virtual DbSet<EmployeeMaster> EmployeeMasters { get; set; }

    public virtual DbSet<State> States { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<City>(entity =>
        {
            entity.HasKey(e => e.RowId).HasName("PK__City__7C36D07E0DA68477");

            entity.ToTable("City", "Angular");

            entity.Property(e => e.RowId)
                .ValueGeneratedNever()
                .HasColumnName("Row_Id");
            entity.Property(e => e.CityName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.State).WithMany(p => p.Cities)
                .HasForeignKey(d => d.StateId)
                .HasConstraintName("FK_StateCity");
        });

        modelBuilder.Entity<Country>(entity =>
        {
            entity.HasKey(e => e.RowId).HasName("PK__Country__7C36D07E5730673D");

            entity.ToTable("Country", "Angular");

            entity.Property(e => e.RowId)
                .ValueGeneratedNever()
                .HasColumnName("Row_Id");
            entity.Property(e => e.CountryName)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<EmployeeMaster>(entity =>
        {
            entity.HasKey(e => e.RowId).HasName("PK__Employee__7C36D07EDF03DA00");

            entity.ToTable("EmployeeMaster", "Angular");

            entity.HasIndex(e => e.MobileNumber, "UQ__Employee__250375B11DEAD627").IsUnique();

            entity.HasIndex(e => e.PassportNumber, "UQ__Employee__45809E71EAD4A1EE").IsUnique();

            entity.HasIndex(e => e.EmailAddress, "UQ__Employee__49A14740709FFB13").IsUnique();

            entity.HasIndex(e => e.PanNumber, "UQ__Employee__7C38BFC82DAEE17A").IsUnique();

            entity.Property(e => e.RowId).HasColumnName("Row_Id");
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.EmailAddress)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.LastName).HasMaxLength(50);
            entity.Property(e => e.MobileNumber)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.PanNumber)
                .IsRequired()
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.PassportNumber)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ProfileImage).HasMaxLength(100);
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

            entity.HasOne(d => d.City).WithMany(p => p.EmployeeMasters)
                .HasForeignKey(d => d.CityId)
                .HasConstraintName("FK_City");

            entity.HasOne(d => d.Country).WithMany(p => p.EmployeeMasters)
                .HasForeignKey(d => d.CountryId)
                .HasConstraintName("FK_Country");

            entity.HasOne(d => d.State).WithMany(p => p.EmployeeMasters)
                .HasForeignKey(d => d.StateId)
                .HasConstraintName("FK_State");
        });

        modelBuilder.Entity<State>(entity =>
        {
            entity.HasKey(e => e.RowId).HasName("PK__State__7C36D07EEEDFB382");

            entity.ToTable("State", "Angular");

            entity.Property(e => e.RowId)
                .ValueGeneratedNever()
                .HasColumnName("Row_Id");
            entity.Property(e => e.StateName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Country).WithMany(p => p.States)
                .HasForeignKey(d => d.CountryId)
                .HasConstraintName("FK_CountryState");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}